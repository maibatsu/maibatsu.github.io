/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */progress,sub,sup{vertical-align:baseline}button,hr,input{overflow:visible}.row,sub,sup{position:relative}html,legend{box-sizing:border-box}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:ButtonText dotted 1px}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}.center,.container{margin-left:auto;margin-right:auto}legend{color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}.left{text-align:left}.right{text-align:right}.center{text-align:center}.justify{text-align:justify}.hidden-sm{display:none}.container{width:90%}@media only screen and (min-width:33.75em){.container{width:80%}}@media only screen and (min-width:60em){.container{width:75%;max-width:60rem}}.row{width:100%}.row [class^=col]{float:left;margin:.5rem 2%;min-height:.125rem}.row::after{content:"";display:table;clear:both}.col-1,.col-10,.col-11,.col-12,.col-2,.col-3,.col-4,.col-5,.col-6,.col-7,.col-8,.col-9{width:96%}.col-1-sm{width:4.33333%}.col-2-sm{width:12.66667%}.col-3-sm{width:21%}.col-4-sm{width:29.33333%}.col-5-sm{width:37.66667%}.col-6-sm{width:46%}.col-7-sm{width:54.33333%}.col-8-sm{width:62.66667%}.col-9-sm{width:71%}.col-10-sm{width:79.33333%}.col-11-sm{width:87.66667%}.col-12-sm{width:96%}@media only screen and (min-width:45em){.col-1{width:4.33333%}.col-2{width:12.66667%}.col-3{width:21%}.col-4{width:29.33333%}.col-5{width:37.66667%}.col-6{width:46%}.col-7{width:54.33333%}.col-8{width:62.66667%}.col-9{width:71%}.col-10{width:79.33333%}.col-11{width:87.66667%}.col-12{width:96%}.hidden-sm{display:block}}html{-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%;color:#333;font-family:Roboto,sans-serif;font-size:1rem;font-weight:400;line-height:1.5}@media (max-width:500px){html{font-size:.75rem}}@media (max-width:900px){html{font-size:1rem}}@media (min-width:1400px){html{font-size:1.2rem}}h1,h2,h3,h4,h5,h6,ol,p,ul{margin-top:0;margin-bottom:1rem}h1,h2,h3,h4,h5,h6{margin-bottom:.5rem;color:#323232;font-family:"Roboto Slab",serif;font-weight:700;line-height:1.1}a[href*="t.me"],a[href*=github],a[href^=http],a[href^=tel],a[href^=mailto]{position:relative;padding-left:1em;transition:all .3s cubic-bezier(.25,.8,.25,1)}a[href*="t.me"]:not(.contacts__item),a[href*=github]:not(.contacts__item),a[href^=http]:not(.contacts__item),a[href^=tel]:not(.contacts__item),a[href^=mailto]:not(.contacts__item){color:#666}a[href*="t.me"]:not(.contacts__item):hover,a[href*=github]:not(.contacts__item):hover,a[href^=http]:not(.contacts__item):hover,a[href^=tel]:not(.contacts__item):hover,a[href^=mailto]:not(.contacts__item):hover{color:#ff512f}header,header h1{color:#fff}a[href*="t.me"]:before,a[href*=github]:before,a[href^=http]:before,a[href^=tel]:before,a[href^=mailto]:before{position:absolute;left:0;display:block;content:"";background-repeat:no-repeat;background-position:0 0;background-size:contain}a[href*="t.me"]:not([href^=http]):not([href^=mailto]):not([href*=github]):before,a[href*=github]:not([href^=http]):not([href^=mailto]):not([href*=github]):before,a[href^=http]:not([href^=http]):not([href^=mailto]):not([href*=github]):before,a[href^=tel]:not([href^=http]):not([href^=mailto]):not([href*=github]):before,a[href^=mailto]:not([href^=http]):not([href^=mailto]):not([href*=github]):before{top:.4em}a[href^=http]:before{top:.55em;width:.65em;height:.65em;background-image:url(../img/icon-link-external.svg)}a[href^=mailto]:before{top:.47em;width:.8em;height:.8em;background-image:url(../img/e-mail-envelope.svg)}a[href*="t.me"]:before,a[href*=github]:before,a[href^=tel]:before{top:.38em;width:.8em;height:.8em}a[href^=tel]:before{background-image:url(../img/phone-receiver.svg)}a[href*=github]:before{background-image:url(../img/github.svg)}a[href*="t.me"]:before{background-image:url(../img/telegram-logo.svg)}header{padding:1rem 0;background:#ff512f;background:linear-gradient(to right,#ff512f,#dd2476);box-shadow:0 3rem 5rem -2rem rgba(0,0,0,.2)}.avatar{width:150px;height:150px;margin:auto auto 1em;border-radius:50%;-webkit-align-self:center;-ms-flex-item-align:center;align-self:center}.avatar img{width:100%;border-radius:50%;box-shadow:0 0 13px #333}@media (max-width:500px){.avatar{width:100px;height:100px}}@media (max-width:800px){.avatar{width:120px;height:120px;margin-bottom:1em}}.contacts{display:-webkit-flex;display:-ms-flexbox;display:flex;margin:2.3em 0 1em;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center}.work__item,.work__picture{display:-webkit-flex;display:-ms-flexbox}.contacts__item{margin:0 1em;text-decoration:none;color:#fff}.contacts__item:hover{text-decoration:underline}@media (max-width:700px){.contacts{-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column}.contacts__item{margin:.5em 0}}.work{padding:2em 0}.work>h2{margin-bottom:1em}.work__item{display:flex;margin-bottom:1.5rem;padding:1rem;transition:box-shadow .3s cubic-bezier(.25,.8,.25,1);color:#666;background-color:#fff;box-shadow:0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24)}.work__item:focus,.work__item:hover{color:#444;box-shadow:0 14px 28px rgba(0,0,0,.25),0 10px 10px rgba(0,0,0,.22)}.work__picture{display:flex;max-width:250px;height:200px}.work__picture img{max-width:250px;height:auto;margin:auto}.work__body{display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;padding-left:1.5rem;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center}@media (max-width:500px){.work{padding:1rem 0}.work__item{-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;color:#444}.work__picture{display:none}.work__body{padding-left:0}}@media (min-width:500px) and (max-width:700px){.work__item{padding:1.5em}.work__picture{display:none}.work__body{padding-left:0}}@media (max-width:800px){.work{padding:1.5rem 0}}html{background-color:#f3f3f3}*,:after,:before{box-sizing:inherit;transition:all .3s cubic-bezier(.25,.8,.25,1)}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9ub3JtYWxpemUuc2NzcyIsIm1haW4uY3NzIiwiX3NpbXBsZS1ncmlkLnNjc3MiLCJfdHlwb2dyYXBoeS5zY3NzIiwibWFpbi5zY3NzIiwiX2hlYWRlci5zY3NzIiwiX2NvbnRhY3RzLnNjc3MiLCJfYXZhdGFyLnNjc3MiLCJfd29yay5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI0RUFxRUEsU0E2R0EsSUMzQkEsSURnQ0UsZUFBQSxTQThGRixPQW5DQSxHQ05BLE1EMkNFLFNBQ0QsUUV2T0QsS0ZpSUEsSUMzQkEsSUVqSEksU0FBQSxTQzFCSixLSjZVQSxPSTVVSSxXQUFBLFdKSUosS0FDRSxPQUFBLEVBWUYsUUNIQSxNQUNBLFFBQ0EsV0FDQSxPQUNBLE9BQ0EsT0FDQSxLQUNBLEtBQ0EsSUFDQSxRQUNBLFFES0UsUUFDRCxNQU1ELE1DSkEsT0FDQSxTQUNBLE1ETUUsUUFBQSxhQU9GLHNCQUNFLFFBQUEsS0FDQSxPQUFBLEVDTUYsU0RVQSxTQUVFLFFBQUEsS0FXRixFQUNFLGlCQUFBLFlBQ0EsNkJBQXNDLFFBUXhDLFNDYkEsUURlRSxjQUFBLEVBV0YsWUFDRSxjQUFBLEtBQ0EsZ0JBQTJCLFVBQzNCLGdCQUFrQyxVQUFBLE9BT3BDLEVDZkEsT0QwQkUsWUFBQSxPQU9GLElBQ0UsV0FBQSxPQVFGLEdBQ0UsVUFBQSxJQUNBLE9BQUEsTUFBQSxFQU9GLEtBQ0UsaUJBQUEsS0FDQSxNQUFBLEtBT0YsTUFDRSxVQUFBLElBUUYsSUMzQkEsSUQ2QkUsVUFBQSxJQUNBLFlBQUEsRUFLRixJQUNFLE9BQUEsT0FHRixJQUNFLElBQUEsTUFVRixJQUNFLGFBQUEsS0FPRixlQUNFLFNBQUEsT0FXRixLQ3JDQSxJQUNBLElBQ0EsS0R1Q0UsWUFBQSxVQUFBLFVBQ0EsVUFBZSxJQU9qQixPQUNFLE9BQUEsSUFBQSxLQVFGLEdBQ0UsV0FBQSxZQUNBLE9BQVUsRUFZWixPQ3ZDQSxNQUNBLE9BQ0EsU0R5Q0UsS0FBQSxRQUNBLE9BQVUsRUFPWixTQUNFLFlB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QWtCWSxNQUFBLEtBQ0EsV0FBQSxFQUFBLEtBQUEsS0FBQSxnQkFBQSxFQUFBLEtBQUEsS0FBQSxnQkFuQlosZUF3QlEsUUFBQSxLQUNBLFVBQUEsTUFDQSxPQUFBLE1BMUJSLG1CQTZCWSxVQUFBLE1BQ0EsT0FBQSxLQUNBLE9BQUEsS0EvQlosWUFvQ1EsUUFBQSxhQUFBLFFBQUEsWUFBQSxRQUFBLEtBQ0EsdUJBQUEsT0FBQSxtQkFBQSxPQUFBLGVBQUEsT0FDQSxhQUFBLE9BRUEsd0JBQUEsT0FBQSxjQUFBLE9BQUEsZ0JBQUEsT0FJUix5QkFDSSxNQUNJLFFBQUEsS0FBQSxFQURKLFlBSVEsdUJBQUEsT0FBQSxtQkFBQSxPQUFBLGVBQUEsT0FDQSxNQUFBLEtBTFIsZUFTUSxRQUFBLEtBVFIsWUFhUSxhQUFBLEdBS1osK0NBQ0ksWUFFUSxRQUFBLE1BRlIsZUFNUSxRQUFBLEtBTlIsWUFVUSxhQUFBLEdBS1oseUJBQ0ksTUFDSSxRQUFBLE9BQUEsR0p6RVIsS0FHSSxpQkFBQSxRQUdKLEVBQUEsT0FBQSxRQUNJLFdBQUEsUUFDQSxXQUFBLElBQUEsSUFBQSIsImZpbGUiOiJtYWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qISBub3JtYWxpemUuY3NzIHY0LjEuMSB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cblxuLyoqXG4gKiAxLiBDaGFuZ2UgdGhlIGRlZmF1bHQgZm9udCBmYW1pbHkgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKiAyLiBQcmV2ZW50IGFkanVzdG1lbnRzIG9mIGZvbnQgc2l6ZSBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2VzIGluIElFIGFuZCBpT1MuXG4gKi9cblxuaHRtbCB7XG4gIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmOyAvKiAxICovXG4gIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5cbmJvZHkge1xuICBtYXJnaW46IDA7XG59XG5cbi8qIEhUTUw1IGRpc3BsYXkgZGVmaW5pdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSwgYW5kIEZpcmVmb3guXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRS5cbiAqL1xuXG5hcnRpY2xlLFxuYXNpZGUsXG5kZXRhaWxzLCAvKiAxICovXG5maWdjYXB0aW9uLFxuZmlndXJlLFxuZm9vdGVyLFxuaGVhZGVyLFxubWFpbiwgLyogMiAqL1xubWVudSxcbm5hdixcbnNlY3Rpb24sXG5zdW1tYXJ5IHsgLyogMSAqL1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqL1xuXG5hdWRpbyxcbmNhbnZhcyxcbnByb2dyZXNzLFxudmlkZW8ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gaU9TIDQtNy5cbiAqL1xuXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lO1xuICBoZWlnaHQ6IDA7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xuXG5wcm9ncmVzcyB7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC0uXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRS5cbiAqL1xuXG50ZW1wbGF0ZSwgLyogMSAqL1xuW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4vKiBMaW5rc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKiAyLiBSZW1vdmUgZ2FwcyBpbiBsaW5rcyB1bmRlcmxpbmUgaW4gaU9TIDgrIGFuZCBTYWZhcmkgOCsuXG4gKi9cblxuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OyAvKiAxICovXG4gIC13ZWJraXQtdGV4dC1kZWNvcmF0aW9uLXNraXA6IG9iamVjdHM7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIG91dGxpbmUgb24gZm9jdXNlZCBsaW5rcyB3aGVuIHRoZXkgYXJlIGFsc28gYWN0aXZlIG9yIGhvdmVyZWRcbiAqIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5cbmE6YWN0aXZlLFxuYTpob3ZlciB7XG4gIG91dGxpbmUtd2lkdGg6IDA7XG59XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBGaXJlZm94IDM5LS5cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXG4gKi9cblxuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiBub25lOyAvKiAxICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyAvKiAyICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFByZXZlbnQgdGhlIGR1cGxpY2F0ZSBhcHBsaWNhdGlvbiBvZiBgYm9sZGVyYCBieSB0aGUgbmV4dCBydWxlIGluIFNhZmFyaSA2LlxuICovXG5cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogaW5oZXJpdDtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG5cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHN0eWxlIGluIEFuZHJvaWQgNC4zLS5cbiAqL1xuXG5kZm4ge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cbiAqL1xuXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBiYWNrZ3JvdW5kIGFuZCBjb2xvciBpbiBJRSA5LS5cbiAqL1xuXG5tYXJrIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmMDtcbiAgY29sb3I6ICMwMDA7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc21hbGwge1xuICBmb250LXNpemU6IDgwJTtcbn1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cbiAqIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07XG59XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtO1xufVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAtLlxuICovXG5cbmltZyB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbn1cblxuLyoqXG4gKiBIaWRlIHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqL1xuXG5zdmc6bm90KDpyb290KSB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5jb2RlLFxua2JkLFxucHJlLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTsgLyogMiAqL1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBtYXJnaW4gaW4gSUUgOC5cbiAqL1xuXG5maWd1cmUge1xuICBtYXJnaW46IDFlbSA0MHB4O1xufVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cbiAqL1xuXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiAxICovXG4gIGhlaWdodDogMDsgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTsgLyogMiAqL1xufVxuXG4vKiBGb3Jtc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqIDIuIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS5cbiAqL1xuXG5idXR0b24sXG5pbnB1dCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgZm9udDogaW5oZXJpdDsgLyogMSAqL1xuICBtYXJnaW46IDA7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb250IHdlaWdodCB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cbiAqL1xuXG5vcHRncm91cCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4vKipcbiAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxuICogMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cbiAqL1xuXG5idXR0b24sXG5pbnB1dCB7IC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXG4gKi9cblxuYnV0dG9uLFxuc2VsZWN0IHsgLyogMSAqL1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbn1cblxuLyoqXG4gKiAxLiBQcmV2ZW50IGEgV2ViS2l0IGJ1ZyB3aGVyZSAoMikgZGVzdHJveXMgbmF0aXZlIGBhdWRpb2AgYW5kIGB2aWRlb2BcbiAqICAgIGNvbnRyb2xzIGluIEFuZHJvaWQgNC5cbiAqIDIuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKi9cblxuYnV0dG9uLFxuaHRtbCBbdHlwZT1cImJ1dHRvblwiXSwgLyogMSAqL1xuW3R5cGU9XCJyZXNldFwiXSxcblt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIGJvcmRlciBhbmQgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwiYnV0dG9uXCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJyZXNldFwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwic3VibWl0XCJdOjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwO1xufVxuXG4vKipcbiAqIFJlc3RvcmUgdGhlIGZvY3VzIHN0eWxlcyB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cbiAqL1xuXG5idXR0b246LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cImJ1dHRvblwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwicmVzZXRcIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInN1Ym1pdFwiXTotbW96LWZvY3VzcmluZyB7XG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDtcbn1cblxuLyoqXG4gKiBDaGFuZ2UgdGhlIGJvcmRlciwgbWFyZ2luLCBhbmQgcGFkZGluZyBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqL1xuXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjMGMwYzA7XG4gIG1hcmdpbjogMCAycHg7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjYyNWVtIDAuNzVlbTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLlxuICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxuICogICAgYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxubGVnZW5kIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBjb2xvcjogaW5oZXJpdDsgLyogMiAqL1xuICBkaXNwbGF5OiB0YWJsZTsgLyogMSAqL1xuICBtYXgtd2lkdGg6IDEwMCU7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMyAqL1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsOyAvKiAxICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRS5cbiAqL1xuXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIElFIDEwLS5cbiAqIDIuIFJlbW92ZSB0aGUgcGFkZGluZyBpbiBJRSAxMC0uXG4gKi9cblxuW3R5cGU9XCJjaGVja2JveFwiXSxcblt0eXBlPVwicmFkaW9cIl0ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXG4gIHBhZGRpbmc6IDA7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBjdXJzb3Igc3R5bGUgb2YgaW5jcmVtZW50IGFuZCBkZWNyZW1lbnQgYnV0dG9ucyBpbiBDaHJvbWUuXG4gKi9cblxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cbiAqIDIuIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLlxuICovXG5cblt0eXBlPVwic2VhcmNoXCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7IC8qIDEgKi9cbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIHBhZGRpbmcgYW5kIGNhbmNlbCBidXR0b25zIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIE9TIFguXG4gKi9cblxuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSB0ZXh0IHN0eWxlIG9mIHBsYWNlaG9sZGVycyBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXG4gKi9cblxuOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIG9wYWNpdHk6IDAuNTQ7XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqIDIuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIFNhZmFyaS5cbiAqL1xuXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDsgLyogMiAqL1xufVxuIiwiLyohIG5vcm1hbGl6ZS5jc3MgdjQuMS4xIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqL1xuLyoqXG4gKiAxLiBDaGFuZ2UgdGhlIGRlZmF1bHQgZm9udCBmYW1pbHkgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKiAyLiBQcmV2ZW50IGFkanVzdG1lbnRzIG9mIGZvbnQgc2l6ZSBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2VzIGluIElFIGFuZCBpT1MuXG4gKi9cbmh0bWwge1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcbiAgLyogMSAqL1xuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLyogMiAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5ib2R5IHtcbiAgbWFyZ2luOiAwOyB9XG5cbi8qIEhUTUw1IGRpc3BsYXkgZGVmaW5pdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUsIGFuZCBGaXJlZm94LlxuICogMi4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXG4gKi9cbmFydGljbGUsXG5hc2lkZSxcbmRldGFpbHMsXG5maWdjYXB0aW9uLFxuZmlndXJlLFxuZm9vdGVyLFxuaGVhZGVyLFxubWFpbixcbm1lbnUsXG5uYXYsXG5zZWN0aW9uLFxuc3VtbWFyeSB7XG4gIC8qIDEgKi9cbiAgZGlzcGxheTogYmxvY2s7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqL1xuYXVkaW8sXG5jYW52YXMsXG5wcm9ncmVzcyxcbnZpZGVvIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gaU9TIDQtNy5cbiAqL1xuYXVkaW86bm90KFtjb250cm9sc10pIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgaGVpZ2h0OiAwOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xucHJvZ3Jlc3Mge1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC0uXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRS5cbiAqL1xudGVtcGxhdGUsXG5baGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuLyogTGlua3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqIDIuIFJlbW92ZSBnYXBzIGluIGxpbmtzIHVuZGVybGluZSBpbiBpT1MgOCsgYW5kIFNhZmFyaSA4Ky5cbiAqL1xuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAvKiAxICovXG4gIC13ZWJraXQtdGV4dC1kZWNvcmF0aW9uLXNraXA6IG9iamVjdHM7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgb3V0bGluZSBvbiBmb2N1c2VkIGxpbmtzIHdoZW4gdGhleSBhcmUgYWxzbyBhY3RpdmUgb3IgaG92ZXJlZFxuICogaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cbmE6YWN0aXZlLFxuYTpob3ZlciB7XG4gIG91dGxpbmUtd2lkdGg6IDA7IH1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBGaXJlZm94IDM5LS5cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXG4gKi9cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgLyogMSAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgLyogMiAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFByZXZlbnQgdGhlIGR1cGxpY2F0ZSBhcHBsaWNhdGlvbiBvZiBgYm9sZGVyYCBieSB0aGUgbmV4dCBydWxlIGluIFNhZmFyaSA2LlxuICovXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHN0eWxlIGluIEFuZHJvaWQgNC4zLS5cbiAqL1xuZGZuIHtcbiAgZm9udC1zdHlsZTogaXRhbGljOyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cbiAqL1xuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBiYWNrZ3JvdW5kIGFuZCBjb2xvciBpbiBJRSA5LS5cbiAqL1xubWFyayB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZjA7XG4gIGNvbG9yOiAjMDAwOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7IH1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cbiAqIGFsbCBicm93c2Vycy5cbiAqL1xuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07IH1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07IH1cblxuLyogRW1iZWRkZWQgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC0uXG4gKi9cbmltZyB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTsgfVxuXG4vKipcbiAqIEhpZGUgdGhlIG92ZXJmbG93IGluIElFLlxuICovXG5zdmc6bm90KDpyb290KSB7XG4gIG92ZXJmbG93OiBoaWRkZW47IH1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuY29kZSxcbmtiZCxcbnByZSxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBtYXJnaW4gaW4gSUUgOC5cbiAqL1xuZmlndXJlIHtcbiAgbWFyZ2luOiAxZW0gNDBweDsgfVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cbiAqL1xuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgLyogMSAqL1xuICBoZWlnaHQ6IDA7XG4gIC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7XG4gIC8qIDIgKi8gfVxuXG4vKiBGb3Jtc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXG4gKi9cbmJ1dHRvbixcbmlucHV0LFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250OiBpbmhlcml0O1xuICAvKiAxICovXG4gIG1hcmdpbjogMDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9udCB3ZWlnaHQgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cbm9wdGdyb3VwIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cblxuLyoqXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXG4gKi9cbmJ1dHRvbixcbmlucHV0IHtcbiAgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTsgfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxuICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxuICovXG5idXR0b24sXG5zZWxlY3Qge1xuICAvKiAxICovXG4gIHRleHQtdHJhbnNmb3JtOiBub25lOyB9XG5cbi8qKlxuICogMS4gUHJldmVudCBhIFdlYktpdCBidWcgd2hlcmUgKDIpIGRlc3Ryb3lzIG5hdGl2ZSBgYXVkaW9gIGFuZCBgdmlkZW9gXG4gKiAgICBjb250cm9scyBpbiBBbmRyb2lkIDQuXG4gKiAyLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICovXG5idXR0b24sXG5odG1sIFt0eXBlPVwiYnV0dG9uXCJdLFxuW3R5cGU9XCJyZXNldFwiXSxcblt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwiYnV0dG9uXCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJyZXNldFwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwic3VibWl0XCJdOjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwOyB9XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5idXR0b246LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cImJ1dHRvblwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwicmVzZXRcIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInN1Ym1pdFwiXTotbW96LWZvY3VzcmluZyB7XG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDsgfVxuXG4vKipcbiAqIENoYW5nZSB0aGUgYm9yZGVyLCBtYXJnaW4sIGFuZCBwYWRkaW5nIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjMGMwYzA7XG4gIG1hcmdpbjogMCAycHg7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjYyNWVtIDAuNzVlbTsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXG4gKiAyLiBDb3JyZWN0IHRoZSBjb2xvciBpbmhlcml0YW5jZSBmcm9tIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gSUUuXG4gKiAzLiBSZW1vdmUgdGhlIHBhZGRpbmcgc28gZGV2ZWxvcGVycyBhcmUgbm90IGNhdWdodCBvdXQgd2hlbiB0aGV5IHplcm8gb3V0XG4gKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cbiAqL1xubGVnZW5kIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogMSAqL1xuICBjb2xvcjogaW5oZXJpdDtcbiAgLyogMiAqL1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgLyogMSAqL1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMyAqL1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xuICAvKiAxICovIH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFLlxuICovXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvOyB9XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAtLlxuICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLS5cbiAqL1xuW3R5cGU9XCJjaGVja2JveFwiXSxcblt0eXBlPVwicmFkaW9cIl0ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCBidXR0b25zIGluIENocm9tZS5cbiAqL1xuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bzsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSBhbmQgU2FmYXJpLlxuICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXG4gKi9cblt0eXBlPVwic2VhcmNoXCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7XG4gIC8qIDEgKi9cbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBhbmQgY2FuY2VsIGJ1dHRvbnMgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWC5cbiAqL1xuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTsgfVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIHRleHQgc3R5bGUgb2YgcGxhY2Vob2xkZXJzIGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIG9wYWNpdHk6IDAuNTQ7IH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxuICovXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDtcbiAgLyogMiAqLyB9XG5cbi5sZWZ0IHtcbiAgdGV4dC1hbGlnbjogbGVmdDsgfVxuXG4ucmlnaHQge1xuICB0ZXh0LWFsaWduOiByaWdodDsgfVxuXG4uY2VudGVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvOyB9XG5cbi5qdXN0aWZ5IHtcbiAgdGV4dC1hbGlnbjoganVzdGlmeTsgfVxuXG4uaGlkZGVuLXNtIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG4uY29udGFpbmVyIHtcbiAgd2lkdGg6IDkwJTtcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogYXV0bzsgfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDMzLjc1ZW0pIHtcbiAgICAuY29udGFpbmVyIHtcbiAgICAgIHdpZHRoOiA4MCU7IH0gfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDYwZW0pIHtcbiAgICAuY29udGFpbmVyIHtcbiAgICAgIHdpZHRoOiA3NSU7XG4gICAgICBtYXgtd2lkdGg6IDYwcmVtOyB9IH1cblxuLnJvdyB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2lkdGg6IDEwMCU7IH1cblxuLnJvdyBbY2xhc3NePVwiY29sXCJdIHtcbiAgZmxvYXQ6IGxlZnQ7XG4gIG1hcmdpbjogMC41cmVtIDIlO1xuICBtaW4taGVpZ2h0OiAwLjEyNXJlbTsgfVxuXG4ucm93OjphZnRlciB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGRpc3BsYXk6IHRhYmxlO1xuICBjbGVhcjogYm90aDsgfVxuXG4uY29sLTEsXG4uY29sLTIsXG4uY29sLTMsXG4uY29sLTQsXG4uY29sLTUsXG4uY29sLTYsXG4uY29sLTcsXG4uY29sLTgsXG4uY29sLTksXG4uY29sLTEwLFxuLmNvbC0xMSxcbi5jb2wtMTIge1xuICB3aWR0aDogOTYlOyB9XG5cbi5jb2wtMS1zbSB7XG4gIHdpZHRoOiA0LjMzMzMzJTsgfVxuXG4uY29sLTItc20ge1xuICB3aWR0aDogMTIuNjY2NjclOyB9XG5cbi5jb2wtMy1zbSB7XG4gIHdpZHRoOiAyMSU7IH1cblxuLmNvbC00LXNtIHtcbiAgd2lkdGg6IDI5LjMzMzMzJTsgfVxuXG4uY29sLTUtc20ge1xuICB3aWR0aDogMzcuNjY2NjclOyB9XG5cbi5jb2wtNi1zbSB7XG4gIHdpZHRoOiA0NiU7IH1cblxuLmNvbC03LXNtIHtcbiAgd2lkdGg6IDU0LjMzMzMzJTsgfVxuXG4uY29sLTgtc20ge1xuICB3aWR0aDogNjIuNjY2NjclOyB9XG5cbi5jb2wtOS1zbSB7XG4gIHdpZHRoOiA3MSU7IH1cblxuLmNvbC0xMC1zbSB7XG4gIHdpZHRoOiA3OS4zMzMzMyU7IH1cblxuLmNvbC0xMS1zbSB7XG4gIHdpZHRoOiA4Ny42NjY2NyU7IH1cblxuLmNvbC0xMi1zbSB7XG4gIHdpZHRoOiA5NiU7IH1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA0NWVtKSB7XG4gIC5jb2wtMSB7XG4gICAgd2lkdGg6IDQuMzMzMzMlOyB9XG4gIC5jb2wtMiB7XG4gICAgd2lkdGg6IDEyLjY2NjY3JTsgfVxuICAuY29sLTMge1xuICAgIHdpZHRoOiAyMSU7IH1cbiAgLmNvbC00IHtcbiAgICB3aWR0aDogMjkuMzMzMzMlOyB9XG4gIC5jb2wtNSB7XG4gICAgd2lkdGg6IDM3LjY2NjY3JTsgfVxuICAuY29sLTYge1xuICAgIHdpZHRoOiA0NiU7IH1cbiAgLmNvbC03IHtcbiAgICB3aWR0aDogNTQuMzMzMzMlOyB9XG4gIC5jb2wtOCB7XG4gICAgd2lkdGg6IDYyLjY2NjY3JTsgfVxuICAuY29sLTkge1xuICAgIHdpZHRoOiA3MSU7IH1cbiAgLmNvbC0xMCB7XG4gICAgd2lkdGg6IDc5LjMzMzMzJTsgfVxuICAuY29sLTExIHtcbiAgICB3aWR0aDogODcuNjY2NjclOyB9XG4gIC5jb2wtMTIge1xuICAgIHdpZHRoOiA5NiU7IH1cbiAgLmhpZGRlbi1zbSB7XG4gICAgZGlzcGxheTogYmxvY2s7IH0gfVxuXG5odG1sIHtcbiAgY29sb3I6ICMzMzM7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDFyZW07XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjU7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDUwMHB4KSB7XG4gICAgaHRtbCB7XG4gICAgICBmb250LXNpemU6IDAuNzVyZW07IH0gfVxuICBAbWVkaWEgKG1heC13aWR0aDogOTAwcHgpIHtcbiAgICBodG1sIHtcbiAgICAgIGZvbnQtc2l6ZTogMXJlbTsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxNDAwcHgpIHtcbiAgICBodG1sIHtcbiAgICAgIGZvbnQtc2l6ZTogMS4ycmVtOyB9IH1cblxuaDEsIGgyLCBoMywgaDQsIGg1LCBoNiwgcCwgdWwsIG9sIHtcbiAgbWFyZ2luLXRvcDogMDtcbiAgbWFyZ2luLWJvdHRvbTogMXJlbTsgfVxuXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2IHtcbiAgbWFyZ2luLWJvdHRvbTogMC41cmVtO1xuICBjb2xvcjogIzMyMzIzMjtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvIFNsYWJcIiwgc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjE7IH1cblxuYVtocmVmXj1cImh0dHBcIl0sIGFbaHJlZl49XCJ0ZWxcIl0sIGFbaHJlZl49XCJtYWlsdG9cIl0sIGFbaHJlZio9XCJ0Lm1lXCJdLCBhW2hyZWYqPVwiZ2l0aHViXCJdIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBwYWRkaW5nLWxlZnQ6IDFlbTtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgY3ViaWMtYmV6aWVyKDAuMjUsIDAuOCwgMC4yNSwgMSk7IH1cbiAgYVtocmVmXj1cImh0dHBcIl06bm90KC5jb250YWN0c19faXRlbSksIGFbaHJlZl49XCJ0ZWxcIl06bm90KC5jb250YWN0c19faXRlbSksIGFbaHJlZl49XCJtYWlsdG9cIl06bm90KC5jb250YWN0c19faXRlbSksIGFbaHJlZio9XCJ0Lm1lXCJdOm5vdCguY29udGFjdHNfX2l0ZW0pLCBhW2hyZWYqPVwiZ2l0aHViXCJdOm5vdCguY29udGFjdHNfX2l0ZW0pIHtcbiAgICBjb2xvcjogIzY2NjsgfVxuICAgIGFbaHJlZl49XCJodHRwXCJdOm5vdCguY29udGFjdHNfX2l0ZW0pOmhvdmVyLCBhW2hyZWZePVwidGVsXCJdOm5vdCguY29udGFjdHNfX2l0ZW0pOmhvdmVyLCBhW2hyZWZePVwibWFpbHRvXCJdOm5vdCguY29udGFjdHNfX2l0ZW0pOmhvdmVyLCBhW2hyZWYqPVwidC5tZVwiXTpub3QoLmNvbnRhY3RzX19pdGVtKTpob3ZlciwgYVtocmVmKj1cImdpdGh1YlwiXTpub3QoLmNvbnRhY3RzX19pdGVtKTpob3ZlciB7XG4gICAgICBjb2xvcjogI2ZmNTEyZjsgfVxuICBhW2hyZWZePVwiaHR0cFwiXTpiZWZvcmUsIGFbaHJlZl49XCJ0ZWxcIl06YmVmb3JlLCBhW2hyZWZePVwibWFpbHRvXCJdOmJlZm9yZSwgYVtocmVmKj1cInQubWVcIl06YmVmb3JlLCBhW2hyZWYqPVwiZ2l0aHViXCJdOmJlZm9yZSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDA7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgY29udGVudDogXCJcIjtcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IDAgMDtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvbnRhaW47IH1cbiAgYVtocmVmXj1cImh0dHBcIl06bm90KFtocmVmXj1cImh0dHBcIl0pOm5vdChbaHJlZl49XCJtYWlsdG9cIl0pOm5vdChbaHJlZio9XCJnaXRodWJcIl0pOmJlZm9yZSwgYVtocmVmXj1cInRlbFwiXTpub3QoW2hyZWZePVwiaHR0cFwiXSk6bm90KFtocmVmXj1cIm1haWx0b1wiXSk6bm90KFtocmVmKj1cImdpdGh1YlwiXSk6YmVmb3JlLCBhW2hyZWZePVwibWFpbHRvXCJdOm5vdChbaHJlZl49XCJodHRwXCJdKTpub3QoW2hyZWZePVwibWFpbHRvXCJdKTpub3QoW2hyZWYqPVwiZ2l0aHViXCJdKTpiZWZvcmUsIGFbaHJlZio9XCJ0Lm1lXCJdOm5vdChbaHJlZl49XCJodHRwXCJdKTpub3QoW2hyZWZePVwibWFpbHRvXCJdKTpub3QoW2hyZWYqPVwiZ2l0aHViXCJdKTpiZWZvcmUsIGFbaHJlZio9XCJnaXRodWJcIl06bm90KFtocmVmXj1cImh0dHBcIl0pOm5vdChbaHJlZl49XCJtYWlsdG9cIl0pOm5vdChbaHJlZio9XCJnaXRodWJcIl0pOmJlZm9yZSB7XG4gICAgdG9wOiAwLjRlbTsgfVxuXG5hW2hyZWZePVwiaHR0cFwiXTpiZWZvcmUge1xuICB0b3A6IDAuNTVlbTtcbiAgd2lkdGg6IDAuNjVlbTtcbiAgaGVpZ2h0OiAwLjY1ZW07XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWcvaWNvbi1saW5rLWV4dGVybmFsLnN2Zyk7IH1cblxuYVtocmVmXj1cIm1haWx0b1wiXTpiZWZvcmUge1xuICB0b3A6IDAuNDdlbTtcbiAgd2lkdGg6IDAuOGVtO1xuICBoZWlnaHQ6IDAuOGVtO1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1nL2UtbWFpbC1lbnZlbG9wZS5zdmcpOyB9XG5cbmFbaHJlZl49XCJ0ZWxcIl06YmVmb3JlLCBhW2hyZWYqPVwiZ2l0aHViXCJdOmJlZm9yZSwgYVtocmVmKj1cInQubWVcIl06YmVmb3JlIHtcbiAgdG9wOiAwLjM4ZW07XG4gIHdpZHRoOiAwLjhlbTtcbiAgaGVpZ2h0OiAwLjhlbTsgfVxuXG5hW2hyZWZePVwidGVsXCJdOmJlZm9yZSB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWcvcGhvbmUtcmVjZWl2ZXIuc3ZnKTsgfVxuXG5hW2hyZWYqPVwiZ2l0aHViXCJdOmJlZm9yZSB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWcvZ2l0aHViLnN2Zyk7IH1cblxuYVtocmVmKj1cInQubWVcIl06YmVmb3JlIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltZy90ZWxlZ3JhbS1sb2dvLnN2Zyk7IH1cblxuaGVhZGVyIHtcbiAgcGFkZGluZzogMXJlbSAwO1xuICBjb2xvcjogI2ZmZjtcbiAgYmFja2dyb3VuZDogI2ZmNTEyZjtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCAjZmY1MTJmLCAjZGQyNDc2KTtcbiAgYm94LXNoYWRvdzogMCAzcmVtIDVyZW0gLTJyZW0gcmdiYSgwLCAwLCAwLCAwLjIpOyB9XG4gIGhlYWRlciBoMSB7XG4gICAgY29sb3I6ICNmZmY7IH1cblxuLmF2YXRhciB7XG4gIHdpZHRoOiAxNTBweDtcbiAgaGVpZ2h0OiAxNTBweDtcbiAgbWFyZ2luOiBhdXRvO1xuICBtYXJnaW4tYm90dG9tOiAxZW07XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYWxpZ24tc2VsZjogY2VudGVyOyB9XG4gIC5hdmF0YXIgaW1nIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgYm94LXNoYWRvdzogMCAwIDEzcHggIzMzMzsgfVxuXG5AbWVkaWEgKG1heC13aWR0aDogNTAwcHgpIHtcbiAgLmF2YXRhciB7XG4gICAgd2lkdGg6IDEwMHB4O1xuICAgIGhlaWdodDogMTAwcHg7IH0gfVxuXG5AbWVkaWEgKG1heC13aWR0aDogODAwcHgpIHtcbiAgLmF2YXRhciB7XG4gICAgd2lkdGg6IDEyMHB4O1xuICAgIGhlaWdodDogMTIwcHg7XG4gICAgbWFyZ2luLWJvdHRvbTogMWVtOyB9IH1cblxuLmNvbnRhY3RzIHtcbiAgZGlzcGxheTogZmxleDtcbiAgbWFyZ2luOiAyLjNlbSAwIDFlbTtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH1cbiAgLmNvbnRhY3RzX19pdGVtIHtcbiAgICBtYXJnaW46IDAgMWVtO1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBjb2xvcjogI2ZmZjsgfVxuICAgIC5jb250YWN0c19faXRlbTpob3ZlciB7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgfVxuXG5AbWVkaWEgKG1heC13aWR0aDogNzAwcHgpIHtcbiAgLmNvbnRhY3RzIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyB9XG4gICAgLmNvbnRhY3RzX19pdGVtIHtcbiAgICAgIG1hcmdpbjogMC41ZW0gMDsgfSB9XG5cbi53b3JrIHtcbiAgcGFkZGluZzogMmVtIDA7IH1cbiAgLndvcmsgPiBoMiB7XG4gICAgbWFyZ2luLWJvdHRvbTogMWVtOyB9XG4gIC53b3JrX19pdGVtIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIG1hcmdpbi1ib3R0b206IDEuNXJlbTtcbiAgICBwYWRkaW5nOiAxcmVtO1xuICAgIHRyYW5zaXRpb246IGJveC1zaGFkb3cgMC4zcyBjdWJpYy1iZXppZXIoMC4yNSwgMC44LCAwLjI1LCAxKTtcbiAgICBjb2xvcjogIzY2NjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgIGJveC1zaGFkb3c6IDAgMXB4IDNweCByZ2JhKDAsIDAsIDAsIDAuMTIpLCAwIDFweCAycHggcmdiYSgwLCAwLCAwLCAwLjI0KTsgfVxuICAgIC53b3JrX19pdGVtOmhvdmVyLCAud29ya19faXRlbTpmb2N1cyB7XG4gICAgICBjb2xvcjogIzQ0NDtcbiAgICAgIGJveC1zaGFkb3c6IDAgMTRweCAyOHB4IHJnYmEoMCwgMCwgMCwgMC4yNSksIDAgMTBweCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4yMik7IH1cbiAgLndvcmtfX3BpY3R1cmUge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgbWF4LXdpZHRoOiAyNTBweDtcbiAgICBoZWlnaHQ6IDIwMHB4OyB9XG4gICAgLndvcmtfX3BpY3R1cmUgaW1nIHtcbiAgICAgIG1heC13aWR0aDogMjUwcHg7XG4gICAgICBoZWlnaHQ6IGF1dG87XG4gICAgICBtYXJnaW46IGF1dG87IH1cbiAgLndvcmtfX2JvZHkge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBwYWRkaW5nLWxlZnQ6IDEuNXJlbTtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgfVxuXG5AbWVkaWEgKG1heC13aWR0aDogNTAwcHgpIHtcbiAgLndvcmsge1xuICAgIHBhZGRpbmc6IDFyZW0gMDsgfVxuICAgIC53b3JrX19pdGVtIHtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICBjb2xvcjogIzQ0NDsgfVxuICAgIC53b3JrX19waWN0dXJlIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgICAud29ya19fYm9keSB7XG4gICAgICBwYWRkaW5nLWxlZnQ6IDA7IH0gfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNTAwcHgpIGFuZCAobWF4LXdpZHRoOiA3MDBweCkge1xuICAud29ya19faXRlbSB7XG4gICAgcGFkZGluZzogMS41ZW07IH1cbiAgLndvcmtfX3BpY3R1cmUge1xuICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgLndvcmtfX2JvZHkge1xuICAgIHBhZGRpbmctbGVmdDogMDsgfSB9XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA4MDBweCkge1xuICAud29yayB7XG4gICAgcGFkZGluZzogMS41cmVtIDA7IH0gfVxuXG5odG1sIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YzZjNmMzsgfVxuXG4qLCAqOmJlZm9yZSwgKjphZnRlciB7XG4gIGJveC1zaXppbmc6IGluaGVyaXQ7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGN1YmljLWJlemllcigwLjI1LCAwLjgsIDAuMjUsIDEpOyB9XG4iLCIvLyBTSU1QTEUgR1JJRCAtIFNBU1MvU0NTUyDigJQgaHR0cHM6Ly9naXRodWIuY29tL3phY2hhY29sZS9TaW1wbGUtR3JpZFxuXG4vLyB1dGlsaXR5XG5cbi5sZWZ0IHtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbn1cblxuLnJpZ2h0IHtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG59XG5cbi5jZW50ZXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG59XG5cbi5qdXN0aWZ5IHtcbiAgdGV4dC1hbGlnbjoganVzdGlmeTtcbn1cblxuLmhpZGRlbi1zbSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8vIGdyaWRcblxuJHdpZHRoOiA5NiU7XG4kZ3V0dGVyOiA0JTtcbiRicmVha3BvaW50LXNtYWxsOiAzMy43NWVtOyAvLyA1NDBweFxuJGJyZWFrcG9pbnQtbWVkOiA0NWVtOyAvLyA3MjBweFxuJGJyZWFrcG9pbnQtbGFyZ2U6IDYwZW07IC8vIDk2MHB4XG5cbi5jb250YWluZXIge1xuICB3aWR0aDogOTAlO1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuXG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogJGJyZWFrcG9pbnQtc21hbGwpIHtcbiAgICB3aWR0aDogODAlO1xuICB9XG5cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkYnJlYWtwb2ludC1sYXJnZSkge1xuICAgIHdpZHRoOiA3NSU7XG4gICAgbWF4LXdpZHRoOiA2MHJlbTtcbiAgfVxufVxuXG4ucm93IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB3aWR0aDogMTAwJTtcbn1cblxuLnJvdyBbY2xhc3NePVwiY29sXCJdIHtcbiAgZmxvYXQ6IGxlZnQ7XG4gIG1hcmdpbjogMC41cmVtIDIlO1xuICBtaW4taGVpZ2h0OiAwLjEyNXJlbTtcbn1cblxuLnJvdzo6YWZ0ZXIge1xuICBjb250ZW50OiBcIlwiO1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgY2xlYXI6IGJvdGg7XG59XG5cbi5jb2wtMSxcbi5jb2wtMixcbi5jb2wtMyxcbi5jb2wtNCxcbi5jb2wtNSxcbi5jb2wtNixcbi5jb2wtNyxcbi5jb2wtOCxcbi5jb2wtOSxcbi5jb2wtMTAsXG4uY29sLTExLFxuLmNvbC0xMiB7XG4gIHdpZHRoOiAkd2lkdGg7XG59XG5cbi5jb2wtMS1zbSB7IHdpZHRoOigkd2lkdGggLyAxMikgLSAoJGd1dHRlciAqIDExIC8gMTIpOyB9XG4uY29sLTItc20geyB3aWR0aDogKCR3aWR0aCAvIDYpIC0gKCRndXR0ZXIgKiAxMCAvIDEyKTsgfVxuLmNvbC0zLXNtIHsgd2lkdGg6ICgkd2lkdGggLyA0KSAtICgkZ3V0dGVyICogOSAvIDEyKTsgfVxuLmNvbC00LXNtIHsgd2lkdGg6ICgkd2lkdGggLyAzKSAtICgkZ3V0dGVyICogOCAvIDEyKTsgfVxuLmNvbC01LXNtIHsgd2lkdGg6ICgkd2lkdGggLyAoMTIgLyA1KSkgLSAoJGd1dHRlciAqIDcgLyAxMik7IH1cbi5jb2wtNi1zbSB7IHdpZHRoOiAoJHdpZHRoIC8gMikgLSAoJGd1dHRlciAqIDYgLyAxMik7IH1cbi5jb2wtNy1zbSB7IHdpZHRoOiAoJHdpZHRoIC8gKDEyIC8gNykpIC0gKCRndXR0ZXIgKiA1IC8gMTIpOyB9XG4uY29sLTgtc20geyB3aWR0aDogKCR3aWR0aCAvICgxMiAvIDgpKSAtICgkZ3V0dGVyICogNCAvIDEyKTsgfVxuLmNvbC05LXNtIHsgd2lkdGg6ICgkd2lkdGggLyAoMTIgLyA5KSkgLSAoJGd1dHRlciAqIDMgLyAxMik7IH1cbi5jb2wtMTAtc20geyB3aWR0aDogKCR3aWR0aCAvICgxMiAvIDEwKSkgLSAoJGd1dHRlciAqIDIgLyAxMik7IH1cbi5jb2wtMTEtc20geyB3aWR0aDogKCR3aWR0aCAvICgxMiAvIDExKSkgLSAoJGd1dHRlciAqIDEgLyAxMik7IH1cbi5jb2wtMTItc20geyB3aWR0aDogJHdpZHRoOyB9XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogJGJyZWFrcG9pbnQtbWVkKSB7XG4gIC5jb2wtMSB7IHdpZHRoOigkd2lkdGggLyAxMikgLSAoJGd1dHRlciAqIDExIC8gMTIpOyB9XG4gIC5jb2wtMiB7IHdpZHRoOiAoJHdpZHRoIC8gNikgLSAoJGd1dHRlciAqIDEwIC8gMTIpOyB9XG4gIC5jb2wtMyB7IHdpZHRoOiAoJHdpZHRoIC8gNCkgLSAoJGd1dHRlciAqIDkgLyAxMik7IH1cbiAgLmNvbC00IHsgd2lkdGg6ICgkd2lkdGggLyAzKSAtICgkZ3V0dGVyICogOCAvIDEyKTsgfVxuICAuY29sLTUgeyB3aWR0aDogKCR3aWR0aCAvICgxMiAvIDUpKSAtICgkZ3V0dGVyICogNyAvIDEyKTsgfVxuICAuY29sLTYgeyB3aWR0aDogKCR3aWR0aCAvIDIpIC0gKCRndXR0ZXIgKiA2IC8gMTIpOyB9XG4gIC5jb2wtNyB7IHdpZHRoOiAoJHdpZHRoIC8gKDEyIC8gNykpIC0gKCRndXR0ZXIgKiA1IC8gMTIpOyB9XG4gIC5jb2wtOCB7IHdpZHRoOiAoJHdpZHRoIC8gKDEyIC8gOCkpIC0gKCRndXR0ZXIgKiA0IC8gMTIpOyB9XG4gIC5jb2wtOSB7IHdpZHRoOiAoJHdpZHRoIC8gKDEyIC8gOSkpIC0gKCRndXR0ZXIgKiAzIC8gMTIpOyB9XG4gIC5jb2wtMTAgeyB3aWR0aDogKCR3aWR0aCAvICgxMiAvIDEwKSkgLSAoJGd1dHRlciAqIDIgLyAxMik7IH1cbiAgLmNvbC0xMSB7IHdpZHRoOiAoJHdpZHRoIC8gKDEyIC8gMTEpKSAtICgkZ3V0dGVyICogMSAvIDEyKTsgfVxuICAuY29sLTEyIHsgd2lkdGg6ICR3aWR0aDsgfVxuXG4gIC5oaWRkZW4tc20ge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG59XG4iLCIvLyBhdXRob3IgICAgICBBbmRyZWkgT3Jsb3YgPGFuZHlvcmxvdkB5YS5ydT5cbi8vIGNvcHlyaWdodCAgIENvcHlyaWdodCAoYykgMjAxNywgQW5kcmVpIE9ybG92XG4vLyBsaWNlbnNlICAgICBodHRwOi8vYW5keW9ybG92LnJ1XG5cbmh0bWwge1xuICAgIGNvbG9yOiAjMzMzO1xuICAgIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiLCBzYW5zLXNlcmlmO1xuICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjU7XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNTAwcHgpIHtcbiAgICAgICAgZm9udC1zaXplOiAwLjc1cmVtO1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA5MDBweCkge1xuICAgICAgICBmb250LXNpemU6IDFyZW07XG4gICAgfVxuXG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDE0MDBweCkge1xuICAgICAgICBmb250LXNpemU6IDEuMnJlbTtcbiAgICB9XG59XG5cbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDYsIHAsIHVsLCBvbCB7XG4gICAgbWFyZ2luLXRvcDogMDtcbiAgICBtYXJnaW4tYm90dG9tOiAxcmVtO1xufVxuXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2IHtcbiAgICBtYXJnaW4tYm90dG9tOiAwLjVyZW07XG4gICAgY29sb3I6IGRhcmtlbigjMzMzLCAwLjUlKTtcbiAgICBmb250LWZhbWlseTogXCJSb2JvdG8gU2xhYlwiLCBzZXJpZjtcbiAgICBmb250LXdlaWdodDogNzAwO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjE7XG59XG5cbmFbaHJlZl49XCJodHRwXCJdLCBhW2hyZWZePVwidGVsXCJdLCBhW2hyZWZePVwibWFpbHRvXCJdLCBhW2hyZWYqPVwidC5tZVwiXSwgYVtocmVmKj1cImdpdGh1YlwiXSB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHBhZGRpbmctbGVmdDogMWVtO1xuICAgIHRyYW5zaXRpb246IGFsbCAwLjNzIGN1YmljLWJlemllcigwLjI1LCAwLjgsIDAuMjUsIDEpO1xuXG4gICAgJjpub3QoLmNvbnRhY3RzX19pdGVtKSB7XG4gICAgICAgIGNvbG9yOiAjNjY2O1xuXG4gICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgY29sb3I6ICNmZjUxMmY7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAmOmJlZm9yZSB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgbGVmdDogMDtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IDAgMDtcbiAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb250YWluO1xuICAgIH1cblxuICAgICY6bm90KFtocmVmXj1cImh0dHBcIl0pOm5vdChbaHJlZl49XCJtYWlsdG9cIl0pOm5vdChbaHJlZio9XCJnaXRodWJcIl0pOmJlZm9yZSB7XG4gICAgICAgIHRvcDogMC40ZW07XG4gICAgfVxufVxuXG5hW2hyZWZePVwiaHR0cFwiXTpiZWZvcmUge1xuICAgIHRvcDogMC41NWVtO1xuICAgIHdpZHRoOiAwLjY1ZW07XG4gICAgaGVpZ2h0OiAwLjY1ZW07XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltZy9pY29uLWxpbmstZXh0ZXJuYWwuc3ZnKTtcbn1cblxuYVtocmVmXj1cIm1haWx0b1wiXTpiZWZvcmUge1xuICAgIHRvcDogMC40N2VtO1xuICAgIHdpZHRoOiAwLjhlbTtcbiAgICBoZWlnaHQ6IDAuOGVtO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWcvZS1tYWlsLWVudmVsb3BlLnN2Zyk7XG59XG5cbmFbaHJlZl49XCJ0ZWxcIl06YmVmb3JlLCBhW2hyZWYqPVwiZ2l0aHViXCJdOmJlZm9yZSwgYVtocmVmKj1cInQubWVcIl06YmVmb3JlIHtcbiAgICB0b3A6IDAuMzhlbTtcbiAgICB3aWR0aDogMC44ZW07XG4gICAgaGVpZ2h0OiAwLjhlbTtcbn1cblxuYVtocmVmXj1cInRlbFwiXTpiZWZvcmUge1xuICAgIC8vIHRvcDogMC4zOGVtO1xuICAgIC8vIHdpZHRoOiAwLjhlbTtcbiAgICAvLyBoZWlnaHQ6IDAuOGVtO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWcvcGhvbmUtcmVjZWl2ZXIuc3ZnKTtcbn1cblxuYVtocmVmKj1cImdpdGh1YlwiXTpiZWZvcmUge1xuICAgIC8vIHRvcDogMC4zOGVtO1xuICAgIC8vIHdpZHRoOiAwLjhlbTtcbiAgICAvLyBoZWlnaHQ6IDAuOGVtO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWcvZ2l0aHViLnN2Zyk7XG59XG5cbmFbaHJlZio9XCJ0Lm1lXCJdOmJlZm9yZSB7XG4gICAgLy8gdG9wOiAwLjM4ZW07XG4gICAgLy8gd2lkdGg6IDAuOGVtO1xuICAgIC8vIGhlaWdodDogMC44ZW07XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltZy90ZWxlZ3JhbS1sb2dvLnN2Zyk7XG59XG4iLCIvLyBhdXRob3IgICAgICBBbmRyZWkgT3Jsb3YgPGFuZHlvcmxvdkB5YS5ydT5cbi8vIGNvcHlyaWdodCAgIENvcHlyaWdodCAoYykgMjAxNywgQW5kcmVpIE9ybG92XG4vLyBsaWNlbnNlICAgICBodHRwOi8vYW5keW9ybG92LnJ1L1xuXG5AaW1wb3J0IFwibm9ybWFsaXplXCI7XG5AaW1wb3J0IFwic2ltcGxlLWdyaWRcIjtcbkBpbXBvcnQgXCJ0eXBvZ3JhcGh5XCI7XG5AaW1wb3J0IFwiaGVhZGVyXCI7XG5AaW1wb3J0IFwiYXZhdGFyXCI7XG5AaW1wb3J0IFwiY29udGFjdHNcIjtcbkBpbXBvcnQgXCJ3b3JrXCI7XG5cbmh0bWwge1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgLy8gYmFja2dyb3VuZC1jb2xvcjogbWVkaXVtc2VhZ3JlZW47XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2YzZjNmMztcbn1cblxuKiwgKjpiZWZvcmUsICo6YWZ0ZXIge1xuICAgIGJveC1zaXppbmc6IGluaGVyaXQ7XG4gICAgdHJhbnNpdGlvbjogYWxsIDAuM3MgY3ViaWMtYmV6aWVyKDAuMjUsIDAuOCwgMC4yNSwgMSk7XG59XG4iLCIvLyBhdXRob3IgICAgICBBbmRyZWkgT3Jsb3YgPGFuZHlvcmxvdkB5YS5ydT5cbi8vIGNvcHlyaWdodCAgIENvcHlyaWdodCAoYykgMjAxNywgQW5kcmVpIE9ybG92XG4vLyBsaWNlbnNlICAgICBodHRwOi8vYW5keW9ybG92LnJ1XG5cbmhlYWRlciB7XG4gICAgcGFkZGluZzogMXJlbSAwO1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIGJhY2tncm91bmQ6ICNmZjUxMmY7XG4gICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCAjZmY1MTJmLCAjZGQyNDc2KTtcbiAgICBib3gtc2hhZG93OiAwIDNyZW0gNXJlbSAtMnJlbSByZ2JhKDAsIDAsIDAsIDAuMik7XG5cbiAgICBoMSB7XG4gICAgICAgIGNvbG9yOiAjZmZmO1xuICAgIH1cbn1cbiIsIi8vIGF1dGhvciAgICAgIEFuZHJlaSBPcmxvdiA8YW5keW9ybG92QHlhLnJ1PlxuLy8gY29weXJpZ2h0ICAgQ29weXJpZ2h0IChjKSAyMDE3LCBBbmRyZWkgT3Jsb3Zcbi8vIGxpY2Vuc2UgICAgIGh0dHA6Ly9hbmR5b3Jsb3YucnVcblxuLmNvbnRhY3RzIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIG1hcmdpbjogMi4zZW0gMCAxZW07XG5cbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcblxuXG4gICAgJl9faXRlbSB7XG4gICAgICAgIG1hcmdpbjogMCAxZW07XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgY29sb3I6ICNmZmY7XG5cbiAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDcwMHB4KSB7XG4gICAgLmNvbnRhY3RzIHtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcblxuICAgICAgICAmX19pdGVtIHtcbiAgICAgICAgICAgIG1hcmdpbjogMC41ZW0gMDtcbiAgICAgICAgfVxuICAgIH1cbn1cbiIsIi8vIGF1dGhvciAgICAgIEFuZHJlaSBPcmxvdiA8YW5keW9ybG92QHlhLnJ1PlxuLy8gY29weXJpZ2h0ICAgQ29weXJpZ2h0IChjKSAyMDE3LCBBbmRyZWkgT3Jsb3Zcbi8vIGxpY2Vuc2UgICAgIGh0dHA6Ly9hbmR5b3Jsb3YucnVcblxuLmF2YXRhciB7XG4gICAgd2lkdGg6IDE1MHB4O1xuICAgIGhlaWdodDogMTUwcHg7XG4gICAgbWFyZ2luOiBhdXRvO1xuICAgIG1hcmdpbi1ib3R0b206IDFlbTtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG5cbiAgICBhbGlnbi1zZWxmOiBjZW50ZXI7XG5cbiAgICBpbWcge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgICAgICBib3gtc2hhZG93OiAwIDAgMTNweCAjMzMzO1xuICAgIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDUwMHB4KSB7XG4gICAgLmF2YXRhciB7XG4gICAgICAgIHdpZHRoOiAxMDBweDtcbiAgICAgICAgaGVpZ2h0OiAxMDBweDtcbiAgICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA4MDBweCkge1xuICAgIC5hdmF0YXIge1xuICAgICAgICB3aWR0aDogMTIwcHg7XG4gICAgICAgIGhlaWdodDogMTIwcHg7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDFlbTtcbiAgICB9XG59XG4iLCIvLyBhdXRob3IgICAgICBBbmRyZWkgT3Jsb3YgPGFuZHlvcmxvdkB5YS5ydT5cbi8vIGNvcHlyaWdodCAgIENvcHlyaWdodCAoYykgMjAxNywgQW5kcmVpIE9ybG92XG4vLyBsaWNlbnNlICAgICBodHRwOi8vYW5keW9ybG92LnJ1XG5cbi53b3JrIHtcbiAgICBwYWRkaW5nOiAyZW0gMDtcblxuICAgICY+aDIge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAxZW07XG4gICAgfVxuXG4gICAgJl9faXRlbSB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDEuNXJlbTtcbiAgICAgICAgcGFkZGluZzogMXJlbTtcbiAgICAgICAgdHJhbnNpdGlvbjogYm94LXNoYWRvdyAwLjNzIGN1YmljLWJlemllcigwLjI1LCAwLjgsIDAuMjUsIDEpO1xuICAgICAgICBjb2xvcjogIzY2NjtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICAgICAgYm94LXNoYWRvdzogMCAxcHggM3B4IHJnYmEoMCwgMCwgMCwgMC4xMiksIDAgMXB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMjQpO1xuXG5cbiAgICAgICAgJjpob3ZlciwgJjpmb2N1cyB7XG4gICAgICAgICAgICBjb2xvcjogIzQ0NDtcbiAgICAgICAgICAgIGJveC1zaGFkb3c6IDAgMTRweCAyOHB4IHJnYmEoMCwgMCwgMCwgMC4yNSksIDAgMTBweCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4yMik7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAmX19waWN0dXJlIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgbWF4LXdpZHRoOiAyNTBweDtcbiAgICAgICAgaGVpZ2h0OiAyMDBweDtcblxuICAgICAgICBpbWcge1xuICAgICAgICAgICAgbWF4LXdpZHRoOiAyNTBweDtcbiAgICAgICAgICAgIGhlaWdodDogYXV0bztcbiAgICAgICAgICAgIG1hcmdpbjogYXV0bztcbiAgICAgICAgfVxuICAgIH1cblxuICAgICZfX2JvZHkge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IDEuNXJlbTtcblxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA1MDBweCkge1xuICAgIC53b3JrIHtcbiAgICAgICAgcGFkZGluZzogMXJlbSAwO1xuXG4gICAgICAgICZfX2l0ZW0ge1xuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICAgIGNvbG9yOiAjNDQ0O1xuICAgICAgICB9XG5cbiAgICAgICAgJl9fcGljdHVyZSB7XG4gICAgICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgICB9XG5cbiAgICAgICAgJl9fYm9keSB7XG4gICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDA7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA1MDBweCkgYW5kIChtYXgtd2lkdGg6IDcwMHB4KSB7XG4gICAgLndvcmsge1xuICAgICAgICAmX19pdGVtIHtcbiAgICAgICAgICAgIHBhZGRpbmc6IDEuNWVtO1xuICAgICAgICB9XG5cbiAgICAgICAgJl9fcGljdHVyZSB7XG4gICAgICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgICB9XG5cbiAgICAgICAgJl9fYm9keSB7XG4gICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDA7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA4MDBweCkge1xuICAgIC53b3JrIHtcbiAgICAgICAgcGFkZGluZzogMS41cmVtIDA7XG4gICAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9 */
